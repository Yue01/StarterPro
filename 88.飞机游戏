//工具类,加载图片、画窗口、存放常量所用工具
//1.gameutil~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
package util;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.URL;
import javax.imageio.ImageIO;

/**
 * 用来封装读取图片部分。其他类直接调用方法即可
 * @author Yue
 *
 */
public class GameUtil {
	     private GameUtil(){}
	
         public static Image getImage(String path){
        	  URL u = GameUtil.class.getClassLoader().getResource(path);          //这个类 直接复制粘贴吧不用太深理解的
        	  BufferedImage img = null;
         try {
        	 img = ImageIO.read(u);
        	 
         }catch (IOException e){ 
        	 e.printStackTrace();
         }
         
         return img;
         }
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//2.Myframe用于加载窗口
package util;

import java.awt.Frame;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

import util.Constant;


public class MyFrame  extends Frame {
	

	public void launchFrame(){
		setSize(Constant.GAME_WIDTH, Constant.GAME_HEIGHT);
		setLocation(100, 100);
		setVisible(true);
		
		new PaintThread().start(); 
		
		addWindowListener(new WindowAdapter() {
			public void windowClosing(WindowEvent e) {
				System.exit(0);
			}
		});
	}
	/**
	 * 双缓冲，也就AWT用用。可以直接复制粘贴使用。
	 */
	private Image offScreenImage = null;
	public void update(Graphics g) {
		if(offScreenImage == null)
			offScreenImage = this.createImage(Constant.GAME_WIDTH,Constant.GAME_HEIGHT);
		
		Graphics gOff = offScreenImage.getGraphics();

		paint(gOff);
		g.drawImage(offScreenImage, 0, 0, null);
	}
	
	class PaintThread extends Thread {
		
		public void run(){
			while(true){
				repaint();
				try {
					Thread.sleep(40); 
				} catch (InterruptedException e) {
					e.printStackTrace();
				}   
			}
		}
		
	}
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//3.constant 用于存放常量
package util;

/**
 * 用于定义常亮引用，用作配置文件。不一定要。
 * @author Yue
 *
 */
public class Constant {
	public static final int GAME_WIDTH = 500;                   
	public static final int GAME_HEIGHT = 500;
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//主程序
//1.Gameframe
package plane;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Date;

import plane.Explode;
import util.GameUtil;
import util.MyFrame;

public class GameFrame extends MyFrame {
	Image bg = GameUtil.getImage("images/bg.jpg");
	plane p = new plane("images/plane.png",50,50);	
	ArrayList BulletList= new ArrayList();
	
	Date startTime;
	Date endTime;
	
	Explode bao;
	
	public void paint(Graphics g){
		g.drawImage(bg, 0, 0, null);
		p.draw(g);
	    for(int i = 0;i<BulletList.size();i++){
	    	Bullet b=(Bullet)BulletList.get(i);
	    	b.draw(g);
	    	boolean peng=b.getRect().intersects(p.getRect());
	        if(peng){
			   p.setLive(false);  //飞机死掉！
			   if(bao==null){
				   endTime = new Date();
				   bao = new Explode(p.x,p.y);
			}
			bao.draw(g);
			
			break;
	    }
		}
	    if(!p.isLive()){
			int period = (int)((endTime.getTime()-startTime.getTime())/1000);
			printInfo(g, "时间："+period+"秒", 20, 120, 260, Color.white);
			
			switch (period/10) {
			case 0:
			case 1:
				printInfo(g, "菜鸟", 50,100,200,Color.white);
				break;
			case 2:
				printInfo(g, "小鸟", 50,100,200,Color.white);
				break;
			case 3:
				printInfo(g, "大鸟", 50,100,200,Color.yellow);
				break;
			case 4:
				printInfo(g, "鸟王子", 50,100,200,Color.yellow);
				break;
			default:
				printInfo(g, "鸟人", 50,100,200,Color.yellow);
				break;
			}
	    }
	}
	    public void printInfo(Graphics g,String str,int size,int x,int y,Color color){
			Color c = g.getColor();
			g.setColor(color);
			Font f = new Font("宋体",Font.BOLD,size);
			g.setFont(f);
			g.drawString(str,x,y);
			g.setColor(c);

		}
	    
	public static void main(String[] args) {
		new GameFrame().launchFrame();
	}
	
	
	public void launchFrame(){
		super.launchFrame();
		//增加键盘的监听
		addKeyListener(new KeyMonitor());
		//生成子弹
		for(int i=0;i<35;i++){
			Bullet b = new Bullet();
			BulletList.add(b);
		}
		startTime = new Date();
	}
	
	
	//定义为内部类，可以方便的使用外部类的普通属性
	class KeyMonitor extends KeyAdapter {

		
		@Override
		public void keyPressed(KeyEvent e) {
			System.out.println("按下："+e.getKeyCode());
			p.addDirection(e);
		}

		@Override
		public void keyReleased(KeyEvent e) {
			System.out.println("放开："+e.getKeyCode());
			p.minusDirection(e);
		}
		}
		
	}
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//2.飞机类
package plane;
import util.GameUtil;

import java.awt.Graphics;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.event.KeyEvent;

import javax.swing.plaf.basic.BasicInternalFrameTitlePane.MoveAction;

public class plane  {
	private boolean left,up,right,down;
	Image img;
	double x,y;
	private boolean live = true;
	int width,height;
	
	public Rectangle getRect(){
		return new Rectangle((int)x,(int) y, width, height);
		
	}
	public void draw(Graphics g){
      if(live){
			g.drawImage(img, (int)x, (int)y, null);
			move();
      }
		
	}

	public void move(){
		if(left){
			x -= 10;
		}
		if(right){
			x += 10;
		}
		if(up){
			y -= 10;
		}
		if(down){
			y += 10;
		}
		
	}
	
	public void addDirection(KeyEvent e){
		switch (e.getKeyCode()) {
		case KeyEvent.VK_LEFT:
			left = true;
			break;
		case KeyEvent.VK_UP:
			up = true;
			break;
		case KeyEvent.VK_RIGHT:
			right = true;
			break;
		case KeyEvent.VK_DOWN:
			down = true;
			break;
		default:
			break;
		}
	}
	
	public void minusDirection(KeyEvent e){
		switch (e.getKeyCode()) {
		case KeyEvent.VK_LEFT:
			left = false;
			break;
		case KeyEvent.VK_UP:
			up = false;
			break;
		case KeyEvent.VK_RIGHT:
			right = false;
			break;
		case KeyEvent.VK_DOWN:
			down = false;
			break;
		default:
			break;
		}
	}
	
	
	
	
	public plane(String imgpath, double x, double y) {
		this.img =  GameUtil.getImage(imgpath);
		this.x = x;
		this.y = y;
		this.width = img.getWidth(null);
		this.height= img.getWidth(null);
		
	}
	
	public plane(){
	}
	public boolean isLive() {
		return live;
	}

	public void setLive(boolean live) {
		this.live = live;
	}
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//3.子弹类，他定义的object我没用，没什么必要。就两个类
package plane;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Rectangle;

import util.Constant;

public class Bullet {
      double x,y;
      int speed=5;
      double degree;
      int width,height;
      

      public Bullet(){
    	  degree = Math.random()*Math.PI*2;
    	  x=Constant.GAME_WIDTH/2;
    	  y=Constant.GAME_HEIGHT/2;  
          width=5;
          height=5;
          

      }
  	public Rectangle getRect(){
		return new Rectangle((int)x,(int) y, width, height);
		
	}
      
      public void draw(Graphics g){
    	  Color c = g.getColor();
    	  g.setColor(Color.yellow);
    	  g.fillOval((int)x, (int)y, width, height);
 
    	  
    	  x+=speed*Math.cos(degree);
    	  y+=speed*Math.sin(degree);
          if(y>Constant.GAME_HEIGHT-height||y<height){        //注意坐标方向
          	 degree = degree*(-1); 
           }

           if(x<0||x>Constant.GAME_WIDTH-width){
          	 degree = Math.PI -degree;
           }
       g.setColor(c);

      }
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//4.爆炸
package plane;

import java.awt.Graphics;
import java.awt.Image;

import util.GameUtil;


public class Explode {
	double x,y;
	static Image[] imgs = new Image[16];
	static {
		for(int i=0;i<16;i++){
			imgs[i] = GameUtil.getImage("images/explode/e"+(i+1)+".gif");
			imgs[i].getWidth(null);
		}
	}
	
	int count;
	
	public void draw(Graphics g){
		if(count<=15){
			g.drawImage(imgs[count], (int)x, (int)y, null);
			count++;
		}
	}
	
	public Explode(double x,double y){
		this.x = x;
		this.y = y;
	}
}

